name: Internal Test GitHub Actions
on:
  workflow_dispatch:
  pull_request:
    paths: [".github/workflows/github-actions.yml", ".github/workflows/_internal-test-github-actions.yml"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    outputs:
      base-branch: ${{ steps.base.outputs.branch }}
      dependabot-branch: ${{ steps.dependabot.outputs.branch }}
    steps:
      - name: Checkout default branch
        uses: tmknom/checkout-action@v1
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Git config as Dependabot
        run: |
          set -x
          git config user.name "dependabot[bot]"
          git config user.email "49699333+dependabot[bot]@users.noreply.github.com"

      - name: Create base branch
        id: base
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          branch="pseudo/${GITHUB_JOB}-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          echo "branch=${base_branch}" >> "${GITHUB_OUTPUT}"
          git switch -c "${branch}"
          git push origin "${branch}"

      - name: Create dependabot branch
        id: dependabot
        env:
          COMMIT_MESSAGE_FILE: .github/fixtures/github-actions.txt
          DEPENDABOT_BRANCH: dependabot/github_actions/actions/checkout-4.2.2
          BASE_BRANCH: ${{ steps.base.outputs.branch }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          echo "branch=${DEPENDABOT_BRANCH}" >> "${GITHUB_OUTPUT}"
          git switch -c "${DEPENDABOT_BRANCH}" "${BASE_BRANCH}"
          git commit -m "$(cat "${COMMIT_MESSAGE_FILE}")" --allow-empty
          git push origin "${DEPENDABOT_BRANCH}"
          gh pr create --base "${BASE_BRANCH}" --head "${DEPENDABOT_BRANCH}" --fill-first

  exercise:
    needs: [setup]
    uses: ./.github/workflows/reusable-merge-github-actions.yml
    with:
      pull-request: ${{ needs.setup.outputs.dependabot-branch }}
      github-actor: ${{ github.repository_owner }}
    permissions:
      contents: write
      pull-requests: write

  verify:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup, exercise]
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Verify state
        env:
          DEPENDABOT_BRANCH: ${{ needs.setup.outputs.dependabot-branch }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          result="$(gh pr view "${DEPENDABOT_BRANCH}" --json state --jq .state)"
          test "${result}" = "MERGED"

  teardown:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup, exercise, verify]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Close pull request
        env:
          DEPENDABOT_BRANCH: ${{ needs.setup.outputs.dependabot-branch }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          gh pr close "${DEPENDABOT_BRANCH}" || true

      - name: Delete branches
        env:
          BASE_BRANCH: ${{ needs.setup.outputs.base-branch }}
          DEPENDABOT_BRANCH: ${{ needs.setup.outputs.dependabot-branch }}
        run: |
          set -x
          git push origin "${DEPENDABOT_BRANCH}" --delete || true
          git push origin "${BASE_BRANCH}" --delete || true
