name: Release Go
on:
  workflow_call:
    inputs:
      bump-level:
        type: string
        required: true
        description: Determines which part of the version to increment [patch/minor/major]
      go-version-file:
        type: string
        default: go.mod
        required: false
        description: Path to the version file for Go, such as .go-version, go.mod or go.work.
      homebrew-tap-repository:
        type: string
        required: false
        description: The repository for Homebrew formulae used to install tools on macOS.

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      packages: read
      id-token: write
    outputs:
      token: ${{ steps.encrypt.outputs.result }}
    steps:
      - name: Download hcp CLI
        uses: hashicorp/hcp-setup-action@fa6934c14c661dfbe9b6cf9c47ddb41759d625aa # v0.1.0
        with:
          version: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Describe hcp secrets
        id: hcp
        env:
          IMAGE: ghcr.io/tmknom/internal-secrets/hcp:latest
        run: |
          docker pull "${IMAGE}"
          labels="$(docker inspect "${IMAGE}" | jq -c '.[0].Config.Labels')"
          echo "::add-mask::${labels}"

          project_id="$(jq -r '.project_id' <<<"${labels}")"
          echo "::add-mask::${project_id}"
          service_account="$(jq -r '.service_account' <<<"${labels}")"
          echo "::add-mask::${service_account}"
          secrets_app="$(jq -r '.secrets_app' <<<"${labels}")"
          echo "::add-mask::${secrets_app}"

          provider="iam/project/${project_id}/service-principal/${service_account}/workload-identity-provider/${secrets_app}"
          echo "::add-mask::${provider}"
          echo "provider=${provider}" >> "${GITHUB_OUTPUT}"

      - name: Authenticate to HCP
        uses: hashicorp/hcp-auth-action@b11d0bff4bbe76283448ddca08a4a4e93c5ed4b9 # v0.1.0
        with:
          workload_identity_provider: ${{ steps.hcp.outputs.provider }}
          audience: ${{ github.repository }}:${{ github.repository_id }}
        timeout-minutes: 1

      - name: Describe GitHub Apps credentials
        id: github
        run: |
          secrets=(hcp vault-secrets secrets open --app github --format=json)

          PR_WRITER_APP_ID="$("${secrets[@]}" PR_WRITER_APP_ID | jq -r '.static_version.value')"
          echo "::add-mask::${PR_WRITER_APP_ID}"
          echo "app-id=${PR_WRITER_APP_ID}" >> "${GITHUB_OUTPUT}"

          key_file="${RUNNER_TEMP}/private.key"
          "${secrets[@]}" PR_WRITER_APP_PRIVATE_KEY | jq -r '.static_version.value' > "${key_file}"
          echo "app-private-key-file=${key_file}" >> "${GITHUB_OUTPUT}"

      - name: Generate GitHub Token
        id: app
        uses: tmknom/generate-github-token-action@e0f9098bfea71c5b68642fcbd1c2e690932856b1 # v0.1.0
        with:
          app-id: ${{ steps.github.outputs.app-id }}
          app-private-key-file: ${{ steps.github.outputs.app-private-key-file }}
          repositories: ${{ inputs.homebrew-tap-repository }}

      - name: Encrypt token
        id: encrypt
        uses: tmknom/symmetric-encrypt-decrypt-action@9e0df07828c3c80c5f3ecbca2cca881751b97805 # v0.1.0
        with:
          data: ${{ steps.app.outputs.token }}
          operation: encrypt

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [prepare]
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    outputs:
      name: ${{ steps.metadata.outputs.name }}
      version: ${{ steps.metadata.outputs.version }}
      version-tag: ${{ steps.bump.outputs.version }}
      checksum-hashes: ${{ steps.metadata.outputs.checksum-hashes }}
      manifest-digest: ${{ steps.metadata.outputs.manifest-digest }}
    steps:
      - name: Check actor access
        if: ${{ github.repository_owner != github.actor }}
        run: exit 1

      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: ${{ inputs.go-version-file }}

      - name: Bump Version
        id: bump
        uses: tmknom/bump-version-action@87bed7f224292cab5b46a4cae9897bbf64153f00 # v0.2.1
        with:
          bump-level: ${{ inputs.bump-level }}

      - name: Push Version Tag
        uses: tmknom/push-version-tag-action@a9d1b46f9c29d3db510771452257b228bfd8a33f # v0.1.1
        with:
          version: ${{ steps.bump.outputs.version }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@df80a981bc6edbc4e220a492d3cbe9f5547a6e75 # v0.17.9

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Decrypt token
        id: decrypt
        uses: tmknom/symmetric-encrypt-decrypt-action@9e0df07828c3c80c5f3ecbca2cca881751b97805 # v0.1.0
        with:
          data: ${{ needs.prepare.outputs.token }}
          operation: decrypt

      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          distribution: goreleaser
          version: ~> v2
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ github.token }}
          HOMEBREW_TAP_REPOSITORY: ${{ inputs.homebrew-tap-repository }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.decrypt.outputs.result }}

      - name: Attest binaries
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-path: dist/

      - name: Generate metadata
        id: metadata
        env:
          ARTIFACTS: ${{ steps.goreleaser.outputs.artifacts }}
          METADATA: ${{ steps.goreleaser.outputs.metadata }}
        run: |
          set -x
          name="$(jq -r '.project_name' <<<"${METADATA}")"
          echo "name=${name}" >> "${GITHUB_OUTPUT}"

          version="$(jq -r '.version' <<<"${METADATA}")"
          echo "version=${version}" >> "${GITHUB_OUTPUT}"

          checksum_file="$(jq -r '.[] | select (.type=="Checksum") | .path' <<<"${ARTIFACTS}")"
          checksum_hashes="$(base64 -w0 "${checksum_file}")"
          echo "checksum-hashes=${checksum_hashes}" >> "${GITHUB_OUTPUT}"

          manifest_digest="$(jq -r '. | map(select(.type=="Docker Manifest"))[0] | .extra.Digest' <<<"${ARTIFACTS}")"
          echo "manifest-digest=${manifest_digest}" >> "${GITHUB_OUTPUT}"

      - name: Attest container images
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.metadata.outputs.manifest-digest }}
          push-to-registry: true

      - name: Upload Artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: dist
          path: dist/
          retention-days: 1

  binary-provenance:
    # Must be referenced by a tag. https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/container/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      provenance-name: ${{ needs.release.outputs.name }}_${{ needs.release.outputs.version }}.intoto.jsonl
      base64-subjects: ${{ needs.release.outputs.checksum-hashes }}
      upload-tag-name: ${{ needs.release.outputs.version-tag }}
      upload-assets: true
      draft-release: true
    permissions:
      contents: write
      id-token: write
      actions: read
    needs: [release]

  image-provenance:
    # Must be refernced by a tag. https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/container/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ghcr.io/${{ github.repository }}
      digest: ${{ needs.release.outputs.manifest-digest }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
      id-token: write
      actions: read
    needs: [release]

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [release, binary-provenance, image-provenance]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Publish release
        env:
          VERSION_TAG: ${{ needs.release.outputs.version-tag }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          gh release edit "${VERSION_TAG}" --draft=false
