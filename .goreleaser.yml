version: 2

env:
  - SOURCE_DATE_EPOCH={{ .CommitTimestamp }}

before:
  hooks:
    - go generate ./...
    - go mod tidy
    - git --no-pager diff --exit-code go.mod go.sum

gomod:
  proxy: true

builds:
  - main: ./cmd/{{ .ProjectName }}
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.name={{ .ProjectName }}
      - -X main.version={{ .Version }}
      - -X main.commit={{ .FullCommit }}
      - -X main.date={{ .CommitDate }}
      - -X main.url={{ .GitURL }}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - format: binary
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
  algorithm: sha256

nfpms:
  - package_name: "{{ .ProjectName }}"
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Arch }}"
    homepage: "{{ .GitURL }}"
    maintainer: "{{ .Env.GITHUB_REPOSITORY_OWNER }} {{ .Env.GITHUB_REPOSITORY_OWNER_ID }}+{{ .Env.GITHUB_REPOSITORY_OWNER }}@users.noreply.github.com"
    description: "{{ .ProjectName }} {{ .Version }}"
    license: "Apache License 2.0"
    formats:
      - apk
      - deb
      - rpm

dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
    use: buildx
    goos: linux
    goarch: amd64
    skip_push: false
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.description={{ .ProjectName }} {{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .CommitDate }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.url={{ .ReleaseURL }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--label=org.opencontainers.image.documentation={{ .GitURL }}/blob/main/README.md"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--platform=linux/amd64"
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
    use: buildx
    goos: linux
    goarch: arm64
    skip_push: false
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.description={{ .ProjectName }} {{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .CommitDate }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.url={{ .ReleaseURL }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--label=org.opencontainers.image.documentation={{ .GitURL }}/blob/main/README.md"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"

signs:
  - cmd: cosign
    artifacts: all
    signature: ${artifact}.sig
    certificate: ${artifact}.pem
    output: true
    args:
      - sign-blob
      - --output-signature=${signature}
      - --output-certificate=${certificate}
      - --oidc-issuer=https://token.actions.githubusercontent.com
      - --oidc-provider=github-actions
      - --yes
      - ${artifact}

docker_signs:
  - cmd: cosign
    artifacts: all
    output: true
    args:
      - sign
      - --annotations="sourceRepositoryDigest={{ .FullCommit }}"
      - --annotations="sourceRepositoryRef={{ .Env.GITHUB_REF }}"
      - --annotations="sourceRepositoryURI={{ .GitURL }}"
      - --annotations="sourceRepositoryIdentifier={{ .Env.GITHUB_REPOSITORY_ID }}"
      - --annotations="sourceRepositoryOwnerURI={{ .Env.GITHUB_SERVER_URL }}/{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      - --annotations="sourceRepositoryOwnerIdentifier={{ .Env.GITHUB_REPOSITORY_OWNER_ID }}"
      - --annotations="runnerEnvironment={{ .Env.RUNNER_ENVIRONMENT }}"
      - --annotations="runInvocationURI={{ .Env.GITHUB_SERVER_URL }}/{{ .Env.GITHUB_REPOSITORY }}/actions/runs/{{ .Env.GITHUB_RUN_ID }}/attempts/{{ .Env.GITHUB_RUN_ATTEMPT }}"
      - --annotations="buildConfigURI={{ .Env.GITHUB_SERVER_URL }}/{{ .Env.GITHUB_WORKFLOW_REF }}"
      - --annotations="buildConfigDigest={{ .Env.GITHUB_WORKFLOW_SHA }}"
      - --annotations="buildTrigger={{ .Env.GITHUB_EVENT_NAME }}"
      - --annotations="_releaseTag=v{{ .Version }}"
      - --annotations="_releaseURL={{ .ReleaseURL }}"
      - --annotations="_releaseDate={{ .CommitDate }}"
      - --annotations="_releaseRepository={{ .Env.GITHUB_REPOSITORY }}"
      - --annotations="_imageName=${artifact}"
      - --annotations="_imageTag={{ .Tag }}"
      - --annotations="_imageDigest=${digest}"
      - --oidc-issuer=https://token.actions.githubusercontent.com
      - --oidc-provider=github-actions
      - --yes
      - ${artifact}@${digest}

# TODO
# "buildSignerURI": "https://github.com/tmknom/test-goreleaser/.github/workflows/reusable-release.yml@refs/heads/main",
# "buildSignerDigest": "46faec918d673d4c68d8d6525d07272b8115f1d6",

sboms:
  - id: binary
    artifacts: binary
    documents:
      - "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.sbom.json"
  - id: source
    artifacts: source
    documents:
      - "{{ .ProjectName }}_{{ .Version }}_source.sbom.json"

changelog:
  use: github-native

release:
  mode: append
  footer: |
    ---

    ## Strictly verify binaries

    ### Download

    ```shell
    gh release download v{{ .Version }}
    ```

    ### Cosign

    ```shell
    cosign verify-blob \
      --signature "{{ .ProjectName }}_{{ .Version }}_checksums.txt.sig" \
      --certificate "{{ .ProjectName }}_{{ .Version }}_checksums.txt.pem" \
      --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
      --certificate-identity-regexp "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$" \
      --certificate-github-workflow-repository "{{ .Env.GITHUB_REPOSITORY }}" \
      --certificate-github-workflow-sha "{{ .FullCommit }}" \
      "{{ .ProjectName }}_{{ .Version }}_checksums.txt"

    sha256sum --ignore-missing -c "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
    ```

    ### GitHub Attestations

    ```shell
    gh attestation verify {{ .ProjectName }}_{{ .Version }}_checksums.txt \
      --deny-self-hosted-runners \
      --repo "{{ .Env.GITHUB_REPOSITORY }}" \
      --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
      --cert-identity-regex "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$"

    sha256sum --ignore-missing -c "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
    ```

    ## Strictly verify container images

    ### Download

    ```shell
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }}
    ```

    ### Cosign

    ```shell
    cosign verify \
      --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
      --certificate-identity-regexp "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$" \
      --certificate-github-workflow-repository "{{ .Env.GITHUB_REPOSITORY }}" \
      --certificate-github-workflow-sha "{{ .FullCommit }}" \
      ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }}
    ```

    ### GitHub Attestations

    ```shell
    gh attestation verify oci://ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }} \
      --deny-self-hosted-runners \
      --repo "{{ .Env.GITHUB_REPOSITORY }}" \
      --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
      --cert-identity-regex "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$"
    ```
