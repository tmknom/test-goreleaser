version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...
    - git --no-pager diff --exit-code go.mod go.sum

builds:
  - env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.name={{.ProjectName}}
      - -X main.version={{.Version}}
      - -X main.commit={{.FullCommit}}
      - -X main.date={{.CommitDate}}
      - -X main.url={{.GitURL}}
    mod_timestamp: "{{.CommitTimestamp}}"
    main: ./cmd/{{.ProjectName}}

gomod:
  proxy: true

archives:
  - id: archive
    format: tar.gz
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
  - id: binary
    format: binary
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

signs:
  - cmd: cosign
    artifacts: all
    signature: ${artifact}.sig
    certificate: ${artifact}.pem
    output: true
    args:
      - sign-blob
      - --output-signature=${signature}
      - --output-certificate=${certificate}
      - --oidc-issuer=https://token.actions.githubusercontent.com
      - --oidc-provider=github-actions
      - --yes
      - ${artifact}

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
  algorithm: sha256

changelog:
  use: github-native

release:
  mode: append
  footer: |
    ---

    ## Download

    ### Binaries

    ```shell
    gh release download v{{ .Version }}
    ```

    ### Container images

    ```shell
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }}
    ```

    ## Strictly verify binaries

    ### Cosign

    ```shell
    cosign verify-blob \
      --signature "{{ .ProjectName }}_{{ .Version }}_checksums.txt.sig" \
      --certificate "{{ .ProjectName }}_{{ .Version }}_checksums.txt.pem" \
      --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
      --certificate-identity-regexp "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$" \
      --certificate-github-workflow-repository "{{ .Env.GITHUB_REPOSITORY }}" \
      --certificate-github-workflow-sha "{{ .FullCommit }}" \
      "{{ .ProjectName }}_{{ .Version }}_checksums.txt"

    sha256sum --ignore-missing -c "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
    ```

    ### GitHub Attestations

    ```shell
    gh attestation verify {{ .ProjectName }}_{{ .Version }}_checksums.txt \
      --deny-self-hosted-runners \
      --repo "{{ .Env.GITHUB_REPOSITORY }}" \
      --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
      --cert-identity-regex "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$"

    sha256sum --ignore-missing -c "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
    ```

    ## Strictly verify container images

    ### Cosign

    ```shell
    cosign verify \
      --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
      --certificate-identity-regexp "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$" \
      --certificate-github-workflow-repository "{{ .Env.GITHUB_REPOSITORY }}" \
      --certificate-github-workflow-sha "{{ .FullCommit }}" \
      ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }}
    ```

    ### GitHub Attestations

    ```shell
    gh attestation verify oci://ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:v{{ .Version }} \
      --deny-self-hosted-runners \
      --repo "{{ .Env.GITHUB_REPOSITORY }}" \
      --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
      --cert-identity-regex "^https://github\.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/release-workflows/\.github/workflows/go\.yml@.+$"
    ```

dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    skip_push: false
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}} {{.Version}}"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.url={{.ReleaseURL}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.documentation={{.GitURL}}/blob/main/README.md"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--platform=linux/amd64"
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    skip_push: false
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}} {{.Version}}"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.url={{.ReleaseURL}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.documentation={{.GitURL}}/blob/main/README.md"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"

docker_signs:
  - cmd: cosign
    artifacts: all
    output: true
    args:
      - sign
      - --oidc-issuer=https://token.actions.githubusercontent.com
      - --oidc-provider=github-actions
      - --yes
      - ${artifact}@${digest}

sboms:
  - artifacts: binary
